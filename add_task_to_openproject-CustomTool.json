{
  "name": "add_task_to_openproject",
  "description": "This tool can be used to add task to a project in OpenProject ",
  "color": "linear-gradient(rgb(36,193,240), rgb(175,203,214))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"task_title\",\"description\":\"Task Title\",\"type\":\"string\",\"required\":false},{\"id\":1,\"property\":\"task_description\",\"description\":\"The Task Description\",\"type\":\"string\",\"required\":false},{\"id\":2,\"property\":\"task_html_description\",\"description\":\"The Task Description in HTML\",\"type\":\"string\",\"required\":false},{\"id\":3,\"property\":\"project_id\",\"description\":\"Project ID in which to create Task\",\"type\":\"number\",\"required\":false},{\"id\":4,\"property\":\"estimated_hours\",\"description\":\"Number of estimated Hours for the tasks to be completed\",\"type\":\"number\",\"required\":false},{\"id\":5,\"property\":\"fecha_inicio\",\"description\":\"Start Date for the Task, String formatted in YYYY-mm-dd\",\"type\":\"string\",\"required\":false},{\"id\":6,\"property\":\"fecha_fin\",\"description\":\"End Date for the Task , String formatted as YYYY-mm-DD\",\"type\":\"string\",\"required\":false}]",
  "func": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"subject\": $task_title,\n  \"description\": {\n    \"format\": \"markdown\",\n    \"raw\": $task_description,\n    \"html\": $task_html_description+$fecha_inicio\n  },\n  \"startDate\": $fecha_inicio,\n  \"dueDate\":$fecha_fin,\n  \"estimatedTime\": \"PT\"+$estimated_hours+\"H\",\n  \"remainingTime\": \"PT\"+$estimated_hours+\"H\",\n  \"percentageDone\": 0,\n  \"_links\": {\n    \"project\": {\n      \"href\": \"/api/v3/projects/\"+$project_id\n    },\n    \"type\": {\n      \"href\": \"/api/v3/types/1\",\n      \"title\": \"Tarea\"\n    }\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://yoururl.com/api/v3/work_packages',\n  headers: { \n    'Content-Type': 'application/json', \n    'Authorization': <YourToken>\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n  return JSON.stringify(response.data)\n})\n.catch((error) => {\n  console.log(error);\n  return \"Ha ocurrido un error y la tarea no fue creada.\"\n});\n"
}
